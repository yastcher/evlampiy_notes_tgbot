name: Deploy to Server

on:
  push:
    branches:
      - release

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
      WIT_RU_TOKEN: ${{ secrets.WIT_RU_TOKEN }}
      WIT_EN_TOKEN: ${{ secrets.WIT_EN_TOKEN }}
      WIT_ES_TOKEN: ${{ secrets.WIT_ES_TOKEN }}
      WIT_DE_TOKEN: ${{ secrets.WIT_DE_TOKEN }}
      MONGO_URI: ${{ secrets.MONGO_URI }}
      GPT_TOKEN: ${{ secrets.GPT_TOKEN }}
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      SERVER_IP: ${{ secrets.SERVER_IP }}
      SERVER_USER: ${{ secrets.SERVER_USER }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      run: |
        docker buildx create --use
        docker buildx inspect --bootstrap

    - name: Build and save docker image
      run: |
        docker build -t evlampiy_notes_tgbot:latest .
        docker save evlampiy_notes_tgbot:latest | gzip > evlampiy_notes_tgbot.tar.gz

    - name: Copy docker image and docker-compose file to server and run
      run: |
        echo "$SSH_PRIVATE_KEY" | base64 --decode > private_key
        chmod 600 private_key
        scp -i private_key -o StrictHostKeyChecking=no evlampiy_notes_tgbot.tar.gz $SERVER_USER@$SERVER_IP:~/evlampiy/evlampiy_notes_tgbot.tar.gz
        scp -i private_key -o StrictHostKeyChecking=no docker-compose.yml $SERVER_USER@$SERVER_IP:~/evlampiy/docker-compose.yml
        ssh -i private_key -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP << EOF
          cd evlampiy
          docker compose down || true
          gunzip -c ~/evlampiy/evlampiy_notes_tgbot.tar.gz | docker load
          docker compose up -d
        EOF
        rm private_key
